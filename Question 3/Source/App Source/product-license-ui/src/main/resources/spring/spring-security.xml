
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Allowing Assets(CSS,JS and Image files) -->
	<http pattern="/assets/**" security="none" />
	<http pattern="/bundle/**" security="none" />



	<http use-expressions="true" entry-point-ref="customEntryPoint"
		auto-config="true">
		<headers>
			<cache-control disabled="false" />
			<frame-options disabled="true" />
		</headers>

		<access-denied-handler error-page="/AccessDenied" />

		<session-management session-authentication-strategy-ref="sessionAuthStrategy">
		</session-management>


		<intercept-url pattern="/login**" access="isAnonymous()" />

		<intercept-url pattern="/**" access="isAuthenticated()" />
		<intercept-url pattern="/api/**" access="isAuthenticated()" />

		<form-login login-page="/login" default-target-url="/home"
			always-use-default-target="false" authentication-failure-url="/login?error"
			username-parameter="j_username" password-parameter="j_password" />

		<logout logout-url="/logout" invalidate-session="true"
			success-handler-ref="customLogoutSuccessHandler" />

		<csrf disabled="true" />



		<custom-filter ref="concurrentSessionFilter" before="CONCURRENT_SESSION_FILTER" />
	</http>


	<beans:bean id="concurrentSessionFilter"
		class=" com.codechasers.license.core.session.ConcurrentSessionFilterExt">
		<beans:constructor-arg ref="sessionRegistry" />

	</beans:bean>

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<beans:bean id="sessionAuthStrategy"
		class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="com.codechasers.license.core.session.SessionAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry" />
					<beans:property name="maximumSessions" value="2" />
					<beans:property name="exceptionIfMaximumExceeded"
						value="false" />
				</beans:bean>
				<beans:bean
					class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
				</beans:bean>
				<beans:bean
					class="com.codechasers.license.core.session.RegisterSessionAuthenticationStrategyExt">
					<beans:constructor-arg ref="sessionRegistry" />
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>




	<beans:bean id="customEntryPoint"
		class="com.codechasers.license.core.util.CustomEntryPoint">
		<beans:constructor-arg value="/login" />
	</beans:bean>

	<beans:bean id="authenticationProvider"
		class="com.codechasers.license.core.services.LimitLoginAuthenticationProvider">
		<beans:property name="passwordEncoder" ref="encoder" />
	</beans:bean>

	<beans:bean id="customLogoutSuccessHandler"
		class="com.codechasers.license.ui.CustomLogoutSuccessHandler" />

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

</beans:beans>
